name: Configure container insights to get metrics

on:
 workflow_dispatch: 
 
env:
 AWS_CLUSTER: devOps-cluster
 AWS_REGION: eu-central-1
   
jobs:
  start:
    name: âœ… Start provisioning container insights
    runs-on: ubuntu-latest
    continue-on-error: false  

    steps:
      
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
            ref: feature/cloudwatch
            path: cloudwatch
      
      - name: Change directory to dev
        run: |
              cd cloudwatch/cloudwatch
              ls -ltr
     
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESSKEYID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-central-1

      - name: Configure kube config to run kubectl commands
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.AWS_CLUSTER }}

      - name: Configure cloud insights namespace for scraping metrics
        run: kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cloudwatch-namespace.yaml

      - name: Configure service account for cloud insights 
        run: kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-serviceaccount.yaml

      - name: Create configmap for cloudwatch agent
        run: |
           curl -O https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-configmap.yaml
           python3 clusterNameChangeScript.py ${{ env.AWS_CLUSTER }}
           cat cwagent-configmap.yaml
           kubectl apply -f cwagent-configmap.yaml
      
      - name: Create DaemonSet for container insights
        run: kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-daemonset.yaml

      - name: Create FluentBit to send the logs to AWS container
        run: |
            ClusterName=${{ env.AWS_CLUSTER }}
            RegionName=${{ env.AWS_REGION }}
            FluentBitHttpPort='2020'
            FluentBitReadFromHead='Off'
            [[ ${FluentBitReadFromHead} = 'On' ]] && FluentBitReadFromTail='Off'|| FluentBitReadFromTail='On'
            [[ -z ${FluentBitHttpPort} ]] && FluentBitHttpServer='Off' || FluentBitHttpServer='On'
            kubectl create configmap fluent-bit-cluster-info \
            --from-literal=cluster.name=${ClusterName} \
            --from-literal=http.server=${FluentBitHttpServer} \
            --from-literal=http.port=${FluentBitHttpPort} \
            --from-literal=read.head=${FluentBitReadFromHead} \
            --from-literal=read.tail=${FluentBitReadFromTail} \
            --from-literal=logs.region=${{ env.AWS_REGION }} -n amazon-cloudwatch
            
      - name: Deploy fluentBit as demonset
        run: kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/fluent-bit/fluent-bit.yaml
     
      - name: List pods in amazon-cloudwatch
        run: kubectl get pods -n amazon-cloudwatch


  
